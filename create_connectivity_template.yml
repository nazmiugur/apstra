---
  ### ---------------------------------------------------------------------------
  ### APSTRA API AUTOMATION
  ### ---------------------------------------------------------------------------
  - hosts: localhost
    gather_facts: False
    connection: local
    roles:
      - { role: apstra_auth }

    tasks:
    - name: Initialize Variables
      set_fact: 
        leaf_ids: ""

    - name: "Get Blueprint ID"
      ansible.builtin.uri:
        url: "{{ apstra.baseurl }}/blueprints"
        method: GET
        status_code: 200
        headers:
          content-type: "application/json"
          AUTHTOKEN: "{{ login.json.token }}"
        validate_certs: false
        force_basic_auth: yes
      register: bp_ids


    - name: Retrieve Blueprint ID
      ansible.builtin.set_fact:
        bp_id: "{{ bp_ids.json | cleanup_bp_id(bp_name) }}"



    - name: Get virtual networks
      ansible.builtin.uri:
        url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/nodes?node_type=virtual_network"
        method: GET
        return_content: yes
        status_code: 200
        headers:
          content-type: "application/json"
          AUTHTOKEN: "{{ login.json.token }}"
        validate_certs: false
        force_basic_auth: yes
        body_format: json
      register: vns



    - name: get vns
      ansible.builtin.set_fact:
        vn_id: "{{ item.value.id }}"
      when: item.value.label == vn_name
      loop: "{{ vns.json.nodes | dict2items }}"



    - name: "Create connectivity template"
      uri:
        url: "{{ apstra.baseurl }}/blueprints/{{ bp_id }}/obj-policy-import"
        method: PUT
        status_code: 204
        headers:
          content-type: "application/json"
          AUTHTOKEN: "{{ login.json.token }}"
        validate_certs: false
        force_basic_auth: yes
        body: "{{ lookup('ansible.builtin.template','templates/connectivity-template.j2') }}"
        body_format: json
      ignore_errors: yes

